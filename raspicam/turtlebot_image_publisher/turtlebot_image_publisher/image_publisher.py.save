#!/usr/bin/env python3

import cv2
import numpy as np
import rclpy
from rclpy.node import Node
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
from std_msgs.msg import String

class TurtlebotImagePublisher(Node):

    def __init__(self):
        super().__init__('turtlebot_image_publisher')
        self.publisher_ = self.create_publisher(Image, '/camera/image_raw', 10)
        self.hello_pub_ = self.create_publisher(String, 'hello_world', 10)
        self.bridge = CvBridge()

    def publish_image(self):
	    # Capture image from CSI RPi camera
	    camera = cv2.VideoCapture(0)
	    ret, frame = camera.read()
	    camera.release()

	    if not ret:
	        self.get_logger().error("Failed to capture image from camera")
	        return

	    # Convert image to ROS message
	    image_msg = self.bridge.cv2_to_imgmsg(frame, "bgr8")

	    # Set the timestamp of the message to the current time
	    image_msg.header.stamp = self.get_clock().now().to_msg()

	    # Publish the message
	    self.publisher_.publish(image_msg)
	    print("Image message published")


def main(args=None):
    rclpy.init(args=args)

    turtlebot_image_publisher = TurtlebotImagePublisher()
    rclpy.spin(turtlebot_image_publisher)

    turtlebot_image_publisher.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
